<launch>
  <!-- ARGUMENTS -->
  <arg name="ns" default="v1"/>
  <arg name="partner" default="v2"/>
  <arg name="initialPoseX" default="1.0"/>
  <arg name="initialPoseY" default="1.0"/>
  <arg name="initialPoseTheta" default="0.0"/>
  <arg name="agents" default="2"/>
  <arg name="id" default="1"/>
  <arg name="use_simulator" default="true" />
  <arg name="use_localization" default="true"/>
  <arg name="partner_host" default="canvas"/>

  <arg name="use_safety" default="true"/>
  <arg name="use_collision" default="false"/>
  <arg name="use_initial_pose" default="false"/>
  <arg name="enable_control" default="true"/>
  <arg name="use_log" default="false"/>
  <arg name="unlink_sensor_link" default="false"/>
  <arg name="tf_prefix" default="" />
  <arg name="remap_scan_topic" default="false"/>
  <arg name="port" default="/dev/actuators/tfrog" />
  <arg name="port_lrf" default="192.168.150.10" />
  <arg name="port_ip" default="10940" />
  <arg name="catkin_ws_folder" default="/home/$(env USER)/Documents/sbs"/>


  <arg name="save_data" default="false"/>
  <arg name="use_mpc" default="false"/>


  <arg name="localizer" default="suzu_control"/>


  <!-- Trajectory Tracker -->
  <arg name="use_trajectory_tracker" default="false"/>
  <arg name="trajectory_tracker_type" default="trajectory_tracker"/>
  <arg name="trajectory_path" default="path"/>
  <arg name="max_vel" default="0.6"  />
  <arg name="max_angvel" default="0.5"  />
  <arg name="max_acc" default="0.3"  />
  <arg name="max_angacc" default="0.5"  />
  <arg name="rotate_ang" default="0.5"  />
  <arg name="limit_vel_by_avel" default="true" />

  <group ns="$(arg ns)">
    <rosparam param="footprint" ns="move_base/local_costmap">[[0.30, -0.30], [0.30, 0.30], [-0.30, 0.30], [-0.30, -0.30]]</rosparam>
    <rosparam param="footprint" ns="move_base/global_costmap/">[[0.30, -0.30], [0.30, 0.30], [-0.30, 0.30], [-0.30, -0.30]]</rosparam>
    <rosparam param="footprint" ns="limiter">[[0.30, -0.30], [0.30, 0.30], [-0.30, 0.30], [-0.30, -0.30]]</rosparam>

    <node pkg="tf" type="static_transform_publisher" name="tf" args="0.03 0 0.24 0 0 0 $(arg tf_prefix)/base_link $(arg tf_prefix)/laser 20" />
    <node pkg="tf" type="static_transform_publisher" name="slink" args="0 0 0 0 0 0 $(arg tf_prefix)/base_link $(arg tf_prefix)/sensor_link 100" unless="$(arg unlink_sensor_link)" />

    <group unless="$(arg use_simulator)">

      <node pkg="tf" type="static_transform_publisher" name="stf5" args="0.03 0.08 0.63 -0.02 1.05 -0.04 $(arg tf_prefix)/sensor_link $(arg tf_prefix)/camera3_link 100"/>
      <node pkg="tf" type="static_transform_publisher" name="stf4" args="-0.06 -0.09 1.15 0.13 -0.54 1.48 $(arg tf_prefix)/sensor_link $(arg tf_prefix)/camera_link 100"/>






      <!-- LRF -->
      <node name="urg_node" pkg="urg_node" type="urg_node" unless="$(arg use_log)">
	<param name="ip_address" value="$(arg port_lrf)" type="string" />
	<param name="ip_port" value="$(arg port_ip)" type="string" />
	<param name="frame_id" type="string" value="$(arg tf_prefix)/laser" />
	<param name="angle_min" value="-2.0" />
	<param name="angle_max" value="2.0" />
	<param name="calibrate_time" type="bool" value="true" />
	<remap from="/scan" to="/scan_orig0" />
	<param name="publish_multiecho" type="bool" value="false" />
      </node>
      
      <!-- DRIVER -->
      <node pkg="ypspur_ros_bridge" type="RosYPSpur" name="ypspur_driver" respawn="true" >   
	<!--unless="$(arg use_log)"> -->
	<param name="port"   value="$(arg port)" type="string" /> 
	<param name="vel"    value="0.7" type="double" /> 
	<param name="angvel" value="0.7" type="double" /> 
	<param name="acc"    value="0.7" type="double" /> 
	<param name="angacc" value="0.5" type="double" /> 
	<param name="hz" value="50.0" type="double" /> 
	<param name="origin_id" value="" type="string" />
	<remap from="ypspur_driver/odom" to="/$(arg ns)/odom" />
	<!--			<remap from="/driver/cmd_vel" to="/aaaa" unless="$(arg enable_control)" /> --> 
	<remap from="ypspur_driver/cmd_vel" to="/$(arg ns)/cmd_vel" />

	<param name="ad_enable7" value="true" type="bool" />
	<param name="ad_gain7" value="0.041894531" type="double" />
	<param name="ad_offset7" value="0.0" type="double" />
	<param name="odom_id" type="string" value="$(arg tf_prefix)/odom" />
	<param name="base_link_id" type="string" value="$(arg tf_prefix)/base_link" />
      </node>
      
      <!-- LOCALIZATION -->
      <group if="$(arg use_localization)">
	<group if="$(arg use_initial_pose)">
	  <rosparam param="initial_pose_x" ns="amcl">0</rosparam>
	  <rosparam param="initial_pose_y" ns="amcl">0</rosparam>
	  <rosparam param="initial_pose_a" ns="amcl">0</rosparam>
	</group>
	<node name="amcl" pkg="amcl" type="amcl">
	  <param name="odom_alpha1" type="double" value="4" />
	  <param name="odom_alpha2" type="double" value="4" />
	  <param name="odom_alpha3" type="double" value="2" />
	  <param name="odom_alpha4" type="double" value="2" />
	  <param name="laser_max_beams" type="int" value="200" />
	  <param name="update_min_d" type="double" value="0.05" />
	  <param name="update_min_a" type="double" value="0.08" />
	  <param name="use_map_topic" type="bool" value="true" />
	  <param name="laser_model_type" type="string" value="beam" />
	  <param name="min_particles" type="int" value="30" />
	  <param name="max_particles" type="int" value="100" />
	  <param name="laser_likelihood_max_dist" type="double" value="0.5" />
	  <param name="odom_frame_id" type="string" value="$(arg tf_prefix)/odom" />
	  <param name="base_frame_id" type="string" value="$(arg tf_prefix)/base_link" />
	  <remap from="/map" to="/$(arg ns)/map" /> 
	</node>
      </group>
    </group>

    <group if="$(arg use_simulator)">
      <group if="$(arg use_initial_pose)">
	<rosparam param="delta_x" ns="amcl">0</rosparam>
	<rosparam param="delta_y" ns="amcl">0</rosparam>
	<rosparam param="delta_yaw" ns="amcl">0</rosparam>
	

      </group>
      <!-- LAUNCH SIMULATOR -->

      <include file="$(find simple_simulator)/launch/simulator_wc.launch" >
	<arg name="use_localization" value="$(arg use_localization)" />
	<arg name="remap_scan_topic" value="true" />
	<arg name="scan_topic" value="/$(arg ns)/scan_orig0" />
	<arg name="delta_x" value="$(arg initialPoseX)" />
	<arg name="delta_y" value="$(arg initialPoseY)" />
	<arg name="delta_yaw" value="$(arg initialPoseTheta)" />
	
      </include>
      



      <!-- UTM SIMULATOR -->
      <node pkg="simple_simulator" type="utm_simulator" name="simulator_hokuyo">
	<param name="frame_id" type="string" value="$(arg tf_prefix)/laser" />
	<remap from="~/scan" to="$(arg scan_topic)" if="$(arg remap_scan_topic)"/>
      </node>
    </group>
    

    <node name="unify" pkg="laser_preprocess" type="uni_density">
      <param name="scan" value="/$(arg ns)/scan_orig" type="string" />
      <param name="uscan" value="/$(arg ns)/scan" type="string" />
      <param name="cull_dist" value="0.05" type="double" />
      <param name="mixed_dist" value="0.15" type="double" />
    </node>


    <node pkg="laser_filters" type="scan_to_scan_filter_chain" output="screen" name="laser_filter">
      <remap from="scan" to="/$(arg ns)/scan_orig0" />
      <remap from="scan_filtered" to="/$(arg ns)/scan_orig" />
      <rosparam command="load" file="$(find ypspur_ros_bridge)/config/shadow_filter.yaml" />
    </node>



    <!-- LAUNCH SAFETY LIMITER -->
    <include file="$(find safety_limiter)/launch/safety_limiter.launch">
      <arg name="cmd_vel" value="/$(arg ns)/limiter/cmd_vel" />
      <arg name="cloud" value="/$(arg ns)/limiter/cloud" />
      <arg name="odom" value="/$(arg ns)/odom" />
      <arg name="cmd_vel_out" value="/$(arg ns)/cmd_vel" /> 

      <arg name="lin_acc" value="0.6" />
      <arg name="ang_acc" value="0.7" />
      <arg name="lin_margin" value=".15" />
      <arg name="ang_margin" value="0.1" />
      <arg name="lin_esc_margin" value="0.15" />
      <arg name="ang_esc_margin" value="0.3" />
      <arg name="unify_scan" value="true" />
      <arg name="tf_prefix" value="$(arg ns)" />
      <arg name="use_safety" value="$(arg use_safety)"/>
    </include>



    <node pkg="trajectory_tracker" type="$(arg trajectory_tracker_type)" name="trajectory_tracker" output="screen">
      <param name="cmd_vel" value="/$(arg ns)/cmd_vel_mux/path_controller" type="string" />
      <param name="path" value="$(arg trajectory_path)" type="string" />
      <param name="path_step" value="1" type="int" />
      <param name="frame_robot"    value="$(arg tf_prefix)/base_link"  />  

      <param name="max_vel"    value="$(arg max_vel)"  />
      <param name="max_steering" value="0.6"   />
      <param name="max_acc"    value="$(arg max_acc)"   />
      <param name="max_angacc" value="$(arg max_angacc)"   />
      <param name="rotate_ang" value="$(arg rotate_ang)"  />
      <param name="limit_vel_by_avel" value="$(arg limit_vel_by_avel)" />

      <param name="curv_forward" value="0.5" type="double" />
      <param name="look_forward" value="0.2" type="double" />
      <param name="k_dist" value="8" type="double" />
      <param name="k_ang" value="12" type="double" />
      <param name="k_avel" value="9" type="double" />
      <param name="dist_lim" value="0.3" type="double" />
      <param name="distance_angle_factor" value="0.5" type="double" />
      <param name="goal_tolerance_dist" value="0.3" type="double" />
      <param name="goal_tolerance_ang" value="0.15" type="double" />
      <param name="allow_backward" value="false" type="bool" />
      <param name="use_logged_velocity" value="true" type="bool" />
    </node>
    


    <!-- SIDE BY SIDE PATH PLANNER -->
    <node pkg="sbs_motion" type="sbs_agent" name ="agent" output="screen" >
      <param name="partner" value="$(arg partner)"/>
      <param name="agents" value="$(arg agents)"/>
      <param name="id" value="$(arg id)"/>		
      <param name="initialPoseX" value="$(arg initialPoseX)"/>
      <param name="initialPoseY" value="$(arg initialPoseY)"/>
      <param name="length" value="0.6"/>
      <param name="width" value="0.6"/>
      <rosparam command="load" file="$(find sbs_motion)/config/util.yaml" />	
      <rosparam command="load" file="$(find sbs_motion)/config/frene.yaml" />	
    </node>

    <node  pkg="occmap" type="occMap_node" name="occmap" output="screen" if="$(arg use_collision)">
      <param name="occMapTopicName" value="occmap"/>
      <param name="sub" value="limiter/cloud" type="str"/>
      <param name="occMapFrame" value="$(arg tf_prefix)/base_link" type="str"/>
      <param name="viz" value="downsampled_points" type="str"/>
      <param name="leafSize" value="0.1" type="double"/>
      <param name="width" value="2" type="double"/>
      <param name="dist" value="3" type="double"/>
      <param name="laser" value="true"/>
    </node>
    <node pkg="unit_converter" type="tfToPoseStamped" name="tfToPoseStamped">
      <param name="tf2TopicName" type="string" value="$(arg tf_prefix)/base_link" />
      <param name="tf1TopicName" type="string" value="map" />
      <param name="poseStampedTopicName" type="string" value="/$(arg ns)/filtered_ndt_current_pose" />
      <param name="samplingTimeHz" value="50"/>
    </node>



  </group>
</launch>
